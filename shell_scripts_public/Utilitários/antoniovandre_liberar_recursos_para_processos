#!/bin/sh

# Proprietário: Antonio Vandré Pedrosa Furtunato Gomes [antoniovandre.github.io/MathematicalRamblingsjs].

# Última atualização: 08-12-2015.


# Checagem da validade dos argumentos.

if [ "$1" != "restore" ] && [ "$1" != "attribute" ]; then echo "Uso incorreto."; exit; fi


# Atribuindo prioridades inferiores a processos conhecidos, se atribuindo; ou normais, se restaurando.

for pid in $(ps -A | grep firefox | awk '{print $1}'); do renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "10"; fi; fi) $pid; done

for pid in $(ps -A | grep chrome | awk '{print $1}'); do renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "10"; fi; fi) $pid; done

for pid in $(ps -A | grep zeitgeist | awk '{print $1}'); do renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "10"; fi; fi) $pid; done

for pid in $(ps -A | grep gedit | awk '{print $1}'); do renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "10"; fi; fi) $pid; done

for pid in $(ps -A | grep pulseaudio | awk '{print $1}'); do renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "10"; fi; fi) $pid; done

for pid in $(ps -A | grep pavucontrol | awk '{print $1}'); do renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "10"; fi; fi) $pid; done

for pid in $(ps -A | grep dropbox | awk '{print $1}'); do renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "10"; fi; fi) $pid; done

for pid in $(ps -A | grep wicd | awk '{print $1}'); do renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "10"; fi; fi) $pid; done

for pid in $(ps -A | grep pekwm | awk '{print $1}'); do renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "10"; fi; fi) $pid; done


# Atribuindo prioridades superiores aos argumentos, se atribuindo; ou normais, se restaurando.


if [ "$2" != "" ]; then
	for pid in $(ps -A | grep "$2" | awk '{print $1}'); do
		renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "-5"; fi; fi) $pid
	done
fi

if [ "$3" != "" ]; then
	for pid in $(ps -A | grep "$3" | awk '{print $1}'); do
		renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "-5"; fi; fi) $pid
	done
fi

if [ "$4" != "" ]; then
	for pid in $(ps -A | grep "$4" | awk '{print $1}'); do
		renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "-5"; fi; fi) $pid
	done
fi

if [ "$5" != "" ]; then
	for pid in $(ps -A | grep "$5" | awk '{print $1}'); do
		renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "-5"; fi; fi) $pid
	done
fi

if [ "$6" != "" ]; then
	for pid in $(ps -A | grep "$6" | awk '{print $1}'); do
		renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "-5"; fi; fi) $pid
	done
fi

if [ "$7" != "" ]; then
	for pid in $(ps -A | grep "$7" | awk '{print $1}'); do
		renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "-5"; fi; fi) $pid
	done
fi

if [ "$8" != "" ]; then
	for pid in $(ps -A | grep "$8" | awk '{print $1}'); do
		renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "-5"; fi; fi) $pid
	done
fi

if [ "$9" != "" ]; then
	for pid in $(ps -A | grep "$9" | awk '{print $1}'); do
		renice $(if [ "$1" = "restore" ]; then echo "0"; else if [ "$1" = "attribute" ]; then echo "-5"; fi; fi) $pid
	done
fi

