#!/bin/bash

# Script para encriptação de arquivos secretos. De Antonio Vandré Pedrosa Furtunato Gomes (http://antoniovandre.github.io/MathematicalRamblingsjs).

# Requer os softwares "md5sum" (http://www.gnu.org/software/coreutils/), "ccrypt" (http://ccrypt.sourceforge.net/), "sxencrypt" (http://sxencrypt.sourceforge.net/) e "unix2dos" (http://sourceforge.net/projects/dos2unix/).

# No AVCAS_INDEX os campos são separados por vírgula ",". No primeiro campo há o arquivo para ser criptografado, no segundo campo o mesmo arquivo criptografado, e no terceiro campo o arquivo temporário onde ele é armazenado afim de servir como parâmetro de comparação (cuidado, não o mantenha em um diretório com acesso permitido a outros usuários, desde que seja uma vontade explícita). 

# Última atualização: 29-11-2016.

AVCAS_INDEX="/home/antoniovandre/Dropbox/antoniovandre_criptografar_arquivos_secretos_software/antoniovandre-criptografar_arquivos_secretos_secretfile_index.txt"

AVCAS_PASSWORD_FILE="/home/antoniovandre/Documentos/antoniovandre-criptografar_arquivos_secretos_software_senha.txt"

AVCAS_XOR_PASSWORD_FILE="/home/antoniovandre/Documentos/antoniovandre-criptografar_arquivos_secretos_software_xor_senha.txt"

AVCAS_PASSWORD_OLD_FILE="/home/antoniovandre/Temp/avcaspof"

AVCAS_XOR_PASSWORD_OLD_FILE="/home/antoniovandre/Temp/avcasxpof"

AVCAS_PASSWORD=$(cat "$AVCAS_PASSWORD_FILE" 2>> /dev/null)

AVCAS_PASSWORD_OLD=$(cat "$AVCAS_PASSWORD_OLD_FILE" 2>> /dev/null)

AVCAS_XOR_PASSWORD=$(cat "$AVCAS_XOR_PASSWORD_FILE" 2>> /dev/null)

AVCAS_XOR_PASSWORD_OLD=$(cat "$AVCAS_XOR_PASSWORD_OLD_FILE" 2>> /dev/null)

if [ "$AVCAS_PASSWORD" != "$AVCAS_PASSWORD_OLD" ]; then cp "$AVCAS_PASSWORD_FILE" "$AVCAS_PASSWORD_OLD_FILE"; fi

if [ "$AVCAS_XOR_PASSWORD" != "$AVCAS_XOR_PASSWORD_OLD" ]; then cp "$AVCAS_XOR_PASSWORD_FILE" "$AVCAS_XOR_PASSWORD_OLD_FILE"; fi

AVCAS_LOG="/home/antoniovandre/Dropbox/antoniovandre_criptografar_arquivos_secretos_software/antoniovandre-criptografar_arquivos_secretos_software_log.txt"

AVCAS_LOG_TEMP="/home/antoniovandre/Temp/antoniovandre-criptografar_arquivos_secretos_log_temp"

MAXIMO_NUMERO_LINHAS_LOG="100"

AVCAS_LOGMASK="/home/antoniovandre/Temp/antoniovandre-criptografar_arquivos_secretos_logmask"

AVCAS_FLAG_LOG="/home/antoniovandre/Temp/antoniovandre-criptografar_arquivos_secretos_file_flag_log"

AVCAS_CONTADOR="/home/antoniovandre/Temp/antoniovandre-criptografar_arquivos_secretos_file_contador"

AVCAS_REGISTRO_LOG="/home/antoniovandre/Temp/antoniovandre-criptografar_arquivos_secretos_file_registro_log"

AVCAS_NUMERO_LINHAS_LOG="/home/antoniovandre/Temp/antoniovandre-criptografar_arquivos_secretos_file_numero_linhas_log"

AVCAS_RESULTADO="/home/antoniovandre/Temp/antoniovandre-criptografar_arquivos_secretos_file_resultado"

AVCAS_FLAG_SUCESSO="/home/antoniovandre/Temp/antoniovandre-criptografar_arquivos_secretos_file_flag_sucesso"

AVCAS_FLAG_SUCESSO_GLOBAL="/home/antoniovandre/Temp/antoniovandre-criptografar_arquivos_secretos_file_flag_sucesso_global"

echo "0" > "$AVCAS_FLAG_SUCESSO_GLOBAL"

rm "$AVCAS_RESULTADO" 2>> /dev/null

touch "$AVCAS_RESULTADO"

touch "$AVCAS_LOG"

rm "$AVCAS_LOG_TEMP"

touch "$AVCAS_LOG_TEMP"

rm "$AVCAS_LOGMASK" 2>> /dev/null

touch "$AVCAS_LOGMASK"

echo "0" > "$AVCAS_NUMERO_LINHAS_LOG"

rm "$AVCAS_REGISTRO_LOG" 2>> /dev/null

touch "$AVCAS_REGISTRO_LOG"

echo "0" > "$AVCAS_FLAG_LOG"

echo "0" > "$AVCAS_CONTADOR"

saveIFS=$IFS

IFS=$'\n'

while read registro; do if [ "$registro" = "" ] || [ "${registro:0:1}" = "#" ]; then continue; fi; echo "0" > "$AVCAS_FLAG_SUCESSO"; secretfile_source=$(echo "$registro" | awk 'BEGIN { FS = "," } ; {print $1}'); secretfile_destiny=$(echo "$registro" | awk 'BEGIN { FS = "," } ; {print $2}'); secret_tempfile=$(echo "$registro" | awk 'BEGIN { FS = "," } ; {print $3}'); if [ ! find "$secretfile_source" 1>> /dev/null 2>> /dev/null ] || [ "$secretfile_destiny" = "" ] || [ "$secret_tempfile" = "" ]; then echo $(expr $(cat "$AVCAS_FLAG_SUCESSO") + 1) > "$AVCAS_FLAG_SUCESSO"; fi; if [ "$AVCAS_PASSWORD" != "$AVCAS_PASSWORD_OLD" ] || [ "$AVCAS_XOR_PASSWORD" != "$AVCAS_XOR_PASSWORD_OLD" ] || [ ! find "$secret_tempfile" 1>> /dev/null 2>> /dev/null ] || [ "$(md5sum "$secretfile_source" 2>> /dev/null | awk '{print $1}')" != "$(md5sum "$secret_tempfile" 2>> /dev/null | awk '{print $1}')" ]; then if ! cp "$secretfile_source" "$secret_tempfile" 2>> /dev/null; then echo $(expr $(cat "$AVCAS_FLAG_SUCESSO") + 1) > "$AVCAS_FLAG_SUCESSO"; fi; if ! sxencrypt "$secret_tempfile" "${secret_tempfile}.xor" "$AVCAS_XOR_PASSWORD" 1>> /dev/null; then echo $(expr $(cat "$AVCAS_FLAG_SUCESSO") + 1) > "$AVCAS_FLAG_SUCESSO"; fi; if ! ccrypt -f -K "$AVCAS_PASSWORD" "${secret_tempfile}.xor" 2>> /dev/null; then echo $(expr $(cat "$AVCAS_FLAG_SUCESSO") + 1) > "$AVCAS_FLAG_SUCESSO"; fi; if ! mv "${secret_tempfile}.xor.cpt" "$secretfile_destiny" 2>> /dev/null; then echo $(expr $(cat "$AVCAS_FLAG_SUCESSO") + 1) > "$AVCAS_FLAG_SUCESSO"; fi; if ! cp "$secretfile_source" "$secret_tempfile" 2>> /dev/null; then echo $(expr $(cat "$AVCAS_FLAG_SUCESSO") + 1) > "$AVCAS_FLAG_SUCESSO"; fi; if [ "$(cat "$AVCAS_FLAG_SUCESSO")" = "0" ]; then echo -n "${secretfile_source} concluído. " >> "$AVCAS_RESULTADO"; else echo -n "Erro ao criptografar ${secretfile_source}. " >> "$AVCAS_RESULTADO"; fi; else if [ "$(cat "$AVCAS_FLAG_SUCESSO")" = "0" ]; then echo -n "${secretfile_source} inalterado. " >> "$AVCAS_RESULTADO"; else echo -n "Erro ao criptografar ${secretfile_source}. " >> "$AVCAS_RESULTADO"; echo $(expr $(cat "$AVCAS_FLAG_SUCESSO_GLOBAL") + 1) > "$AVCAS_FLAG_SUCESSO_GLOBAL"; fi; fi; done < $AVCAS_INDEX

echo "" >> "$AVCAS_RESULTADO"

echo "$(cat "$AVCAS_RESULTADO")"

while read linha_log; do if [ "$linha_log" = "" ] || [ "${linha_log:0:1}" = "#" ]; then echo "c" >> "$AVCAS_LOGMASK"; else echo $(expr $(cat "$AVCAS_NUMERO_LINHAS_LOG") + 1) > "$AVCAS_NUMERO_LINHAS_LOG"; echo "l" >> "$AVCAS_LOGMASK"; fi; done < $AVCAS_LOG

if [ "$(cat "$AVCAS_NUMERO_LINHAS_LOG")" -lt "$MAXIMO_NUMERO_LINHAS_LOG" ]; then echo "l" >> "$AVCAS_LOGMASK"; fi

while read linha_log_mask; do echo $(expr $(cat "$AVCAS_CONTADOR") + 1) > "$AVCAS_CONTADOR"; if [ "$linha_log_mask" = "l" ]; then if [ "$(cat "$AVCAS_FLAG_LOG")" = "0" ]; then (echo -n -e "$(cat "$AVCAS_RESULTADO")\t"; date +%d-%m-%Y_%T) >> "$AVCAS_LOG_TEMP"; echo "1" > "$AVCAS_FLAG_LOG"; fi; if [ "$(cat "$AVCAS_REGISTRO_LOG")" != "" ]; then echo $(cat "$AVCAS_REGISTRO_LOG") >> "$AVCAS_LOG_TEMP"; echo $(cat $AVCAS_LOG | head -n $(cat "$AVCAS_CONTADOR") | tail -n 1) > "$AVCAS_REGISTRO_LOG"; else echo $(cat $AVCAS_LOG | head -n $(cat "$AVCAS_CONTADOR") | tail -n 1) > "$AVCAS_REGISTRO_LOG"; fi; else echo "$(cat $AVCAS_LOG | head -n $(cat "$AVCAS_CONTADOR") | tail -n 1)" >> "$AVCAS_LOG_TEMP"; fi; done < $AVCAS_LOGMASK

cp "$AVCAS_LOG_TEMP" "$AVCAS_LOG"

unix2dos -q "$AVCAS_LOG"

IFS=$saveIFS

if [ "$(cat "$AVCAS_FLAG_SUCESSO_GLOBAL")" != "0" ]; then exit 1; fi

echo "Pressione RETURN para sair."; read key
