#!/bin/bash

# Proprietário: Antonio Vandré Pedrosa Furtunato Gomes.

# Script leitor de RSS, para Android.

# Última atualização: 07-06-2024. Não considerando alterações em variáveis globais.

if ! [ -n "$AVENV" ]; then echo -ne "Carregando variáveis de ambiente... "; if ! source "${HOME}/storage/shared/av_softwares/BASH scripts/antoniovandre_env_android" &>> /dev/null; then echo -e "Ocorreu um erro.\n"; else echo -e "${AV_VERDE}Ok${AV_SEMCOR}.\n"; fi; fi

TEMPO="${2}s"
RSS="${1}"

if ! [ -n "$AVCORES" ]; then echo -ne "Carregando cores... "; if ! source "${BASHSCRIPTSDIR}antoniovandre_cores_android" &>> /dev/null; then echo -e "Ocorreu um erro.\n"; else echo -e "${AV_VERDE}Ok${AV_SEMCOR}.\n"; fi; fi

if ! hash wget &>> /dev/null; then echo -e "${AV_VERMELHO}Software \"wget\" não encontrado${AV_SEMCOR}."; exit 1; fi

if ! hash iconv &>> /dev/null; then echo -e "${AV_VERMELHO}Software \"iconv\" não encontrado${AV_SEMCOR}."; exit 1; fi

if ! hash python3 &>> /dev/null; then echo -e "${AV_VERMELHO}Software \"python3\" não encontrado${AV_SEMCOR}."; exit 1; fi

if ! ls "${BASHSCRIPTSDIR}antoniovandre_verificarinternet_1_android" &>> /dev/null; then echo -e "${AV_VERMELHO}Software \"antoniovandre_verificarinternet_1_android\" não encontrado${AV_SEMCOR}."; exit 1; fi

if ! ls "${BASHSCRIPTSDIR}antoniovandre_verificarinternet_android" &>> /dev/null; then echo -e "${AV_VERMELHO}Software \"antoniovandre_verificarinternet_android\" não encontrado${AV_SEMCOR}."; exit 1; fi

if [ -z "${RSS}" ]; then echo -e "${AV_VERMELHO}Entre com a url RSS como primeiro argumento${AV_SEMCOR}."; exit 1; fi

if ! [[ "${2}" =~ ^[0-9]+$ ]]; then echo -e "${AV_VERMELHO}Entre com o tempo de refresh, em segundos, como segundo argumento${AV_SEMCOR}."; exit 1; fi

TITULOP="TITULOP"

echo -e "Leitor de RSS.\nFonte: ${AV_CIANOCLARO}${RSS}${AV_SEMCOR}.\nTempo de refresh: ${AV_CIANOCLARO}${TEMPO}${AV_SEMCOR}.\n\nCtrl + C para sair.\n\n"

while true; do
	RAW=$(wget -qO- "${RSS}")
	RAW=$(echo -n "${RAW}" | sed ':a;N;$!ba;s/<title>\n/<title>/g' | sed ':a;N;$!ba;s/<description>\n/<description>/g')

	if [ -z "${RAW}" ]; then sleep "${TEMPO}"; continue; else break; fi
done	

SHIFT=$(echo "${RAW}" | grep -a "<item>" | wc -l)

SHIFT2=$(CONTADOR="0"; for LINHA in `echo $RAW`; do TEMP=$(echo $LINHA | grep -a "<title>"); if ! [ -z "${TEMP}" ]; then CONTADOR=$(expr "${CONTADOR}" + 1); fi; done; echo -n "${CONTADOR}")

SHIFT3=$(CONTADOR="0"; for LINHA in `echo $RAW`; do TEMP=$(echo $LINHA | grep -a "<description>"); if ! [ -z "${TEMP}" ]; then CONTADOR=$(expr "${CONTADOR}" + 1); fi; done; echo -n "${CONTADOR}")

SHIFT4=$(CONTADOR="0"; for LINHA in `echo $RAW`; do TEMP=$(echo $LINHA | grep "<link>"); if ! [ -z "${TEMP}" ]; then CONTADOR=$(expr "${CONTADOR}" + 1); fi; done; echo -n "${CONTADOR}")

while true; do
	if ! bash "${BASHSCRIPTSDIR}antoniovandre_verificarinternet_1_android" &>> /dev/null; then echo -e "${AV_VERMELHO}Perda de conexão com a internet${AV_SEMCOR}. Tentando reconexão..."; if ! bash /storage/emulated/0/av_softwares/BASH\ scripts/antoniovandre_verificarinternet_android; then exit 1; fi; fi

	CONTADOR=$SHIFT2
	CONTADOR2=$SHIFT3
	CONTADOR3=$SHIFT4
	FLAG="0"
	FLAG2="0"

	while [ "${CONTADOR}" -ge $(expr "${SHIFT2}" - "${SHIFT}" + 1) ]; do
		if [ "${FLAG2}" == "0" ]; then
			RAW=$(wget -qO- "${RSS}")
			RAW=$(echo -n "${RAW}" | sed ':a;N;$!ba;s/<title>\n/<title>/g' | sed ':a;N;$!ba;s/<description>\n/<description>/g')
			if [ -z "${RAW}" ]; then sleep "${TEMPO}"; continue; fi
		fi

		TITULO=$(echo -n "${RAW}" | grep -a "<title>" | head "-${CONTADOR}" | tail -1 | sed "s/<title>//g" | sed "s/<\/title>//g" | iconv -f iso-8859-1 -t utf-8 2>> /dev/null | python3 -c 'import html, sys; [print(html.unescape(l), end="") for l in sys.stdin]' 2>> /dev/null | tr -d "\n")

		DESCRICAO=$(echo -n "${RAW}" | grep -a "<description>" | head "-${CONTADOR2}" | tail -1 | sed "s/<description>//g" | sed "s/<\/description>//g" | iconv -f iso-8859-1 -t utf-8 2>> /dev/null | python3 -c 'import html, sys; [print(html.unescape(l), end="") for l in sys.stdin]' 2>> /dev/null | sed "s/<a/\\${AV_ROXO}<a/g" | sed "s/<t/\\${AV_ROXO}<t/g" | sed "s/<h/\\${AV_ROXO}<h/g" | sed "s/<s/\\${AV_ROXO}<s/g" | sed "s/<i/\\${AV_ROXO}<i/g" | sed "s/<b/\\${AV_ROXO}<b/g" | sed "s/<em/\\${AV_ROXO}<em/g" | sed "s/<\//\\${AV_ROXO}<\//g" | sed "s/>/>\\${AV_SEMCOR}/g" | sed "s/<\!\[CDATA\[/\\${AV_ROXO}\!\[CDATA\[\\${AV_SEMCOR}/g" | sed "s/\]\]>/\\${AV_ROXO}\]\]>\\${AV_SEMCOR}/g" | tr -d "\n")

		LINK=$(echo -n "${RAW}" | grep -a "<link>" --binary-files=text | head "-${CONTADOR3}" | tail -1 | sed "s/<link>//g" 2>> /dev/null | sed "s/<\/link>//g" 2>> /dev/null | tr -d "\n")

		if [ "${TITULOP}" == "TITULOP" ]; then FLAG="1"; fi

		if [ "${TITULOP}" == "${TITULO}" ]; then FLAG="1"; FLAG2="1"; CONTADOR=$(expr "${CONTADOR}" - 1); CONTADOR2=$(expr "${CONTADOR2}" - 1); CONTADOR3=$(expr "${CONTADOR3}" - 1); continue; fi

		if [ "${FLAG}" == "1" ]; then echo -e "${AV_CIANOCLARO}${TITULO}${AV_SEMCOR}"; echo -e "${DESCRICAO}\n"; echo -e "Ler mais: \"${AV_AZUL}${LINK}${AV_SEMCOR}\".\n"; fi

		CONTADOR=$(expr "${CONTADOR}" - 1)
		CONTADOR2=$(expr "${CONTADOR2}" - 1)
		CONTADOR3=$(expr "${CONTADOR3}" - 1)
	done

	TITULOP=$TITULO;

	sleep "${TEMPO}"
done
