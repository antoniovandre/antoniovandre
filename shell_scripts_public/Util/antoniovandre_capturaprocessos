#!/bin/bash

# Proprietário: Antonio Vandré Pedrosa Furtunato Gomes (antoniovandre.github.io/MathematicalRamblingsjs).

# Script de captura de processos para logs, de Antonio Vandré.

# Última atualização: 10-07-2024.

ARQUIVOCAPTURAFLAG="${HOME}/shell_scripts/Util/antoniovandre_capturarprocessos_flag.txt"
ARQUIVOPROCESSOS="${HOME}/ramdisk/processos.list"
TEMPOREFRESH="1800s"

IFS=$'\n'

echo -n "" > "${ARQUIVOPROCESSOS}.tmp"; echo -n "" > "${ARQUIVOPROCESSOS}"

while true; do
	while read LINHA; do LINHA=$(echo -n "${LINHA}" | awk -F" " '{for (i = 1; i <= NF; i++) {if (i < NF) {printf "%s ", $i} else {printf "%s", $i}}}'); if [ "${LINHA}" != "" ] && [ "$(echo -n ${LINHA:0:1})" != "#" ]; then CAPTURAPROCESSOFLAG=$LINHA; fi; done < "${ARQUIVOCAPTURAFLAG}"

	if [ "$(echo -n ${CAPTURAPROCESSOFLAG} | tr -d ' ')" == "1" ]; then
		for PROCESSO in `ps -u antoniovandre`; do FLAG="0"; for PROCESSOOLD in `echo "${PROCESSOSOLD}"`; do if [ "$(echo -n ${PROCESSO} | awk -F" " '{print $1}' | tr -d '\n')" == "$(echo -n ${PROCESSOOLD} | awk -F" " '{print $1}' | tr -d '\n')" ]; then FLAG="1"; break; fi; done; if [ "${FLAG}" == "0" ]; then echo "${PROCESSO}" >> "${ARQUIVOPROCESSOS}.tmp"; fi; done

		echo "" >> "${ARQUIVOPROCESSOS}.tmp"

		while read PROCESSO1; do CONTADOR="0"; COMP1=$(echo -n "${PROCESSO1}" | awk -F" " '{for (i = 4; i <= NF; i++) {if (i < NF) {printf "%s ", $i} else {printf "%s", $i}}}'); while read PROCESSO2; do COMP2=$(echo -n "${PROCESSO2}" | awk -F" " '{for (i = 4; i <= NF; i++) {if (i < NF) {printf "%s ", $i} else {printf "%s", $i}}}'); if [ "${COMP1}" == "${COMP2}" ]; then CONTADOR=$(("${CONTADOR}" + 1)); echo "${PROCESSO2}-Instancia${CONTADOR}" >> "${ARQUIVOPROCESSOS}"; TEMP=$(grep -v "${PROCESSO2}" "${ARQUIVOPROCESSOS}.tmp"); echo -n "${TEMP}" > "${ARQUIVOPROCESSOS}.tmp"; fi; done < "${ARQUIVOPROCESSOS}.tmp"; done < "${ARQUIVOPROCESSOS}.tmp"

		for PROCESSO in `cat "${ARQUIVOPROCESSOS}"`; do "${HOME}/shell_scripts/Util/antoniovandre_logprocessos" $(echo -n "${PROCESSO}" | awk -F" " '{for (i = 4; i <= NF; i++) {if (i < NF) {printf "%s ", $i} else {printf "%s", $i}}}' | sed 's/\//\(slash\)/g' | sed 's/\:/\(twodots\)/g' | sed 's/\ /\(space\)/g'); done

		PROCESSOSOLD="${PROCESSOS}"; echo -n "" > "${ARQUIVOPROCESSOS}.tmp"; echo -n "" > "${ARQUIVOPROCESSOS}"
	fi
		 sleep "${TEMPOREFRESH}"
done
